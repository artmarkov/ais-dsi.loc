<?php

namespace common\models\sigur;

use Yii;

/**
 * This is the model class for table "users_card_log".
 *
 * @property int $id
 * @property string|null $user_common_id
 * @property string|null $key_hex Пропуск (в формате HEX)
 * @property string|null $datetime Дата и время события в формате ГГГГ-ММ-ДД ЧЧ:ММ:СС
 * @property string|null $deny_reason Код причины запрета доступа
 * @property int|null $dir_code Код направления прохода (1=выход, 2=вход, 3=неизвестное).
 * @property string|null $dir_name Наименование направления прохода (OUT, IN, UNKNOWN)
 * @property int|null $evtype_code Тип события (1=проход, 2=запрет)
 * @property string|null $evtype_name Наименование типа события (PASS, DENY)
 * @property string|null $name Имя сотрудника
 * @property string|null $position Должность сотрудника
 */
class UsersCardLog extends \artsoft\db\ActiveRecord
{
    const DENY_REASON = [
        '0' => '0 - Введен неверный PIN-код.',
        '1' => '1 - Срок действия пропуска истек.',
        '2' => '2 - Системная.',
        '3' => '3 - Неизвестный номер пропуска.',
        '4' => '4 - Запрещено в соответствии с действующим режимом.',
        '5' => '5 - Доступ на запрошенную точку доступа запрещен.',
        '6' => '6 - Доступ в запрошенное время запрещен.',
        '7' => '7 - Доступ запрещен в результате работы функции пресечения повторного прохода.',
        '8' => '8 - Использован основной считыватель (ожидается дополнительный).',
        '9' => '9 - Использован дополнительный считыватель (ожидается основной).',
        '10' => '10 - Режимы пересеклись недопустимым способом.',
        '11' => '11 - Точка доступа заблокирована.',
        '12' => '12 - Удерживается кнопка блокировки.',
        '13' => '13 - Другая дверь шлюза сейчас открыта.',
        '14' => '14 - Превышение числа объектов в зоне.',
        '15' => '15 - Охранник отказал в доступе.',
        '16' => '16 - Недопустимое опьянение.',
        '17' => '17 - Контроллер не готов (код 17). (Система не дождалась принятия решения о предоставлении доступа. Обычно такое бывает когда контроллеры настроены делегировать принятие решения какой-либо внешней системе, и она долго не дает ответа.)',
        '18' => '18 - Не дождались результата алкотестирования.',
        '19' => '19 - Не дождались сопровождающего.',
        '20' => '20 - Не дождались санкции охраны.',
        '21' => '21 - Не дождались второго объекта.',
        '22' => '22 - Обработка предыдущего объекта не завершена (код 22).',
        '23' => '23 - Предыдущий проход не завершен. (Предыдущий проходящий не завершил проход. Датчик прохода не срабатывал. Система все еще ждет, пока он пройдет. Новому запросившему было отказано.)',
        '24' => '24 - Невозможно списать стоимость выбранной позиции.',
        '25' => '25 - Не было распознавания гос. номера.',
        '26' => '26 - Активно специальное ограничение.',
        '27' => '27 - Есть не сданные предметы.',
        '28' => '28 - Лицо не опознано.',
        '29' => '29 - Попытка подбора кода.',
        '30' => '30 - Ожидание сопровождающего.',
        '31' => '31 - Доступ по гос. номеру запрещен режимом.',
        '32' => '32 - Не получено решение внешней системы.',
        '33' => '33 - По решению внешней системы.',
        '34' => '34 - Нет связи с сервером. (Запрошенная логика доступа не может быть реализована в отсутствии связи с сервером.)',
        '35' => '35 - Проверка температуры не пройдена.',
        '36' => '36 - Доступ запрещен. Верификация не пройдена. (Согласно "режима" для проходящего активировано несколько логик верификации. Несколько из них не были выполнены.)',
        '37' => '37 - Доступ запрещен. Отсутствует лицевая маска. (Согласно "режима" для проходящего активирована логика "жесткой" проверки маски на лице. Маска либо отсутствовала на лице проходящего, либо же система не получила подтверждения о её наличии.)',
    ];

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'users_card_log';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['datetime'], 'safe'],
            [['dir_code', 'evtype_code'], 'default', 'value' => null],
            [['dir_code', 'evtype_code', 'isUserAis'], 'integer'],
            [['user_common_id'], 'string', 'max' => 4],
            [['key_hex'], 'string', 'max' => 8],
            [['deny_reason'], 'string', 'max' => 32],
            [['dir_name', 'evtype_name'], 'string', 'max' => 16],
            [['name', 'position'], 'string', 'max' => 127],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('art/guide', 'ID'),
            'user_common_id' => Yii::t('art/guide', 'User Common ID'),
            'key_hex' => 'Код пропуска',
            'datetime' => 'Дата и время события',
            'deny_reason' => 'Код причины запрета доступа',
            'dir_code' => 'Направление',
            'dir_name' => 'Направление прохода',
            'evtype_code' => 'Тип события',
            'evtype_name' => 'Наименование типа события',
            'name' => 'ФИО посетителя',
            'position' => 'Должность',
        ];
    }
}
